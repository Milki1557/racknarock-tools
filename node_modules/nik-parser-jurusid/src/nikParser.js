import { prop, kokab, kec } from "../data/wilayah.js";

const getPropinsi = (kode) => {
  const propData = prop.find(
    (element) => parseInt(element.kode) === parseInt(kode)
  );

  return propData;
};

const getKokab = (kode) => {
  const kokabData = kokab.find(
    (element) => parseInt(element.kode) === parseInt(kode)
  );

  return kokabData;
};

const getKec = (kode) => {
  const kecData = kec.find(
    (element) => parseInt(element.kode) === parseInt(kode)
  );

  return kecData;
};

const nikParser = (nik) => {
  // Output NIK tidak valid
  let res = {
    status: "error",
    message: "NIK tidak valid",
  };

  if (
    nik.toString().length === 16 &&
    getPropinsi(nik.substring(0, 2)) &&
    getKokab(nik.substring(0, 4))
  ) {
    const thnNow = new Date().getFullYear().toString().substr(-2);
    // 15 09 12 07 03 93 0001
    const tglLahir = nik.substring(6, 8);
    const blnLahir = nik.substring(8, 10);
    const thnLahir = nik.substring(10, 12);

    //propinsi
    const cekProp = getPropinsi(nik.substring(0, 2));
    const namaProp = cekProp.name;

    // kokab
    const cekKokab = getKokab(nik.substring(0, 4));
    const namaKokab = cekKokab.name;

    // kecamatan
    // const cekKec = getKec(nik.substring(0, 6));
    // const namaKec = cekKec.name;

    // jenkel
    let jenKel = "L";
    tglLahir > 40 && (jenKel = "P");

    // tglLahir
    let tgLahir = tglLahir;
    tglLahir > 40 &&
      (tgLahir =
        (parseInt(tglLahir) - 40).toString().length > 0
          ? (parseInt(tglLahir) - 40).toString()
          : `0${(tglLahir - 40).toString()}`);

    // tahun lahir
    let thLahir = `19${thnLahir}`;
    parseInt(thnLahir) < parseInt(thnNow) && (thLahir = `20${thnLahir}`);

    // Output NIK valid
    res = {
      status: "success",
      message: "NIK valid",
      data: {
        nik: nik,
        kelamin: jenKel,
        lahir: `${thLahir}-${blnLahir}-${tgLahir}`,
        provinsi: namaProp,
        kotakab: namaKokab,
        uniqcode: nik.substring(12, 16),
      },
    };
  }

  return res;
};

export default nikParser;
